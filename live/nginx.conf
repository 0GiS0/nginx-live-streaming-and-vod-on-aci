worker_processes auto;

events {
    worker_connections 768;
}

rtmp{
    server{
        listen 1935;      

        #rtmp endpoint /live
        application live{ 
            live on;
            
            record all;
            record_path /recordings;
            record_unique on;
            # convert recorded file to mp4 format
            exec_record_done ffmpeg -i $path -c copy $dirname/$basename.mp4;

            #optimization for video and audio in the same package
            interleave on;
            #HLS for iOs/MacOs devices
            hls on;
            #The path where the fragments will go for HLS
            hls_path /tmp/hls;
            #How long the fragments are gonna be
            hls_fragment 15s;
            #The same for dash
            dash on;
            dash_path /tmp/dash;
            dash_fragment 15s;
        }        
    }
}

http{
    default_type application/octet-stream;

    server{
        listen 80;

        location / {
            #Where the fragments for HLS and DASH are
            root /tmp;

            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

        }     

        types {
            #HLS
            application/vnd.apple.mpegurl m3u8;
            video/mp2t ts;
            #HTML
            text/html html;
            #DASH
            application/dash+xml mpd;
        }
    }
}